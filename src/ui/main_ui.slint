import { VerticalBox, HorizontalBox, TabWidget, ScrollView, Button, ComboBox, LineEdit } from "std-widgets.slint";

export struct NetworkInterface {
    name: string,
    ipv4_addresses: [string],
    ipv6_addresses: [string],
    mac_address: string,
    is_up: bool,
    is_loopback: bool,
    environment: string,  // New field to identify source environment
}

export struct PortInfo {
    process_id: string,
    process_name: string,
    protocol: string,
    port: string,
    direction: string,
    network: string,
}


export struct DockerNetwork {
    name: string,
    driver: string,
    scope: string,
    subnet: string,
}

export component MainWindow inherits Window {
    width: 1024px;
    height: 768px;
    title: "WSL Network Manager";
    
    in property <[NetworkInterface]> network-interfaces: [];
    in property <[PortInfo]> ports: [];
    in property <[DockerNetwork]> docker-networks: [];
    in property <string> ping-response: "";
    in property <string> http-response: "";
    in property <string> raw-output: "";
    in property <NetworkInterface> selected-network-detail;
    in property <[PortInfo]> filtered-ports: [];
    
    out property <int> selected-network-index: -1;
    out property <string> selected-network-type: "";
    out property <string> packet-type: "ping";
    out property <string> destination: "";
    out property <string> selected-interface: "";
    in-out property <bool> show-network-detail: false;
    
    callback network-selected(int);
    callback network-row-clicked(int);
    callback send-packet();
    callback refresh-data();
    callback show-network-popup();
    
    VerticalBox {
        HorizontalBox {
            Button {
                text: "Refresh";
                clicked => {
                    refresh-data();
                }
            }
        }
        
        TabWidget {
            Tab {
                title: "Networks";
                VerticalBox {
                    Text {
                        text: "Networks";
                        font-size: 18px;
                        font-weight: 700;
                    }
                    
                    HorizontalBox {
                        ScrollView {
                            width: 100%;
                            VerticalBox {
                                // Header row
                                HorizontalBox {
                                    Text { text: "Environment"; width: 120px; font-weight: 600; }
                                    Text { text: "Interface"; width: 140px; font-weight: 600; }
                                    Text { text: "MAC Address"; width: 140px; font-weight: 600; }
                                    Text { text: "IPv4 Addresses"; width: 160px; font-weight: 600; }
                                    Text { text: "IPv6 Addresses"; width: 200px; font-weight: 600; }
                                    Text { text: "Status"; width: 80px; font-weight: 600; }
                                }
                                
                                // Separator
                                Rectangle {
                                    height: 1px;
                                    background: #cccccc;
                                }
                                
                                // Network interfaces data
                                for network[index] in network-interfaces : VerticalBox {
                                    touch-area := TouchArea {
                                        clicked => {
                                            network-row-clicked(index);
                                        }
                                        
                                        Rectangle {
                                            background: parent.has-hover ? #2d5aa0 : transparent;
                                            border-radius: 4px;
                                            
                                            HorizontalBox {
                                                padding: 8px;
                                                Text { 
                                                    text: network.environment; 
                                                    width: 120px; 
                                                    color: touch-area.has-hover ? white : (network.environment == "Windows" ? #0066cc : (network.environment == "WSL" ? #009900 : #666666));
                                                    font-weight: 500;
                                                }
                                                if touch-area.has-hover : Text { 
                                                    text: network.name; 
                                                    width: 140px; 
                                                    font-weight: network.is_loopback ? 400 : 500;
                                                    color: white;
                                                }
                                                if !touch-area.has-hover : Text { 
                                                    text: network.name; 
                                                    width: 140px; 
                                                    font-weight: network.is_loopback ? 400 : 500;
                                                }
                                                if touch-area.has-hover : Text { 
                                                    text: network.mac_address == "" ? "N/A" : network.mac_address; 
                                                    width: 140px;
                                                    font-family: "monospace";
                                                    color: white;
                                                }
                                                if !touch-area.has-hover : Text { 
                                                    text: network.mac_address == "" ? "N/A" : network.mac_address; 
                                                    width: 140px;
                                                    font-family: "monospace";
                                                }
                                                if touch-area.has-hover : Text { 
                                                    text: {
                                                        // Join IPv4 addresses with commas
                                                        network.ipv4_addresses.length > 0 ? (
                                                            network.ipv4_addresses.length > 1 ? 
                                                                network.ipv4_addresses[0] + ", " + (network.ipv4_addresses.length > 2 ? network.ipv4_addresses[1] + ", ..." : network.ipv4_addresses[1])
                                                                : network.ipv4_addresses[0]
                                                        ) : "N/A"
                                                    };
                                                    width: 160px;
                                                    wrap: TextWrap.word-wrap;
                                                    font-family: "monospace";
                                                    font-size: 12px;
                                                    font-weight: 600;
                                                    color: white;
                                                }
                                                if !touch-area.has-hover : Text { 
                                                    text: {
                                                        // Join IPv4 addresses with commas
                                                        network.ipv4_addresses.length > 0 ? (
                                                            network.ipv4_addresses.length > 1 ? 
                                                                network.ipv4_addresses[0] + ", " + (network.ipv4_addresses.length > 2 ? network.ipv4_addresses[1] + ", ..." : network.ipv4_addresses[1])
                                                                : network.ipv4_addresses[0]
                                                        ) : "N/A"
                                                    };
                                                    width: 160px;
                                                    wrap: TextWrap.word-wrap;
                                                    font-family: "monospace";
                                                    font-size: 12px;
                                                    font-weight: 600;
                                                }
                                                if touch-area.has-hover : Text { 
                                                    text: {
                                                        // Join IPv6 addresses with commas
                                                        network.ipv6_addresses.length > 0 ? (
                                                            network.ipv6_addresses.length > 1 ? 
                                                                network.ipv6_addresses[0] + ", " + (network.ipv6_addresses.length > 2 ? network.ipv6_addresses[1] + ", ..." : network.ipv6_addresses[1])
                                                                : network.ipv6_addresses[0]
                                                        ) : "N/A"
                                                    };
                                                    width: 200px;
                                                    wrap: TextWrap.word-wrap;
                                                    font-family: "monospace";
                                                    font-size: 12px;
                                                    font-weight: 600;
                                                    color: white;
                                                }
                                                if !touch-area.has-hover : Text { 
                                                    text: {
                                                        // Join IPv6 addresses with commas
                                                        network.ipv6_addresses.length > 0 ? (
                                                            network.ipv6_addresses.length > 1 ? 
                                                                network.ipv6_addresses[0] + ", " + (network.ipv6_addresses.length > 2 ? network.ipv6_addresses[1] + ", ..." : network.ipv6_addresses[1])
                                                                : network.ipv6_addresses[0]
                                                        ) : "N/A"
                                                    };
                                                    width: 200px;
                                                    wrap: TextWrap.word-wrap;
                                                    font-family: "monospace";
                                                    font-size: 12px;
                                                    font-weight: 600;
                                                }
                                                Text { 
                                                    text: network.is_up ? "UP" : "DOWN"; 
                                                    width: 80px;
                                                    color: touch-area.has-hover ? white : (network.is_up ? #009900 : #cc0000);
                                                    font-weight: 600;
                                                }
                                            }
                                        }
                                    }
                                    // Grid line separator
                                    Rectangle {
                                        height: 1px;
                                        background: #e0e0e0;
                                    }
                                }
                            }
                        }
                        
                        ScrollView {
                            width: 700px;
                            VerticalBox {
                                Text {
                                    text: "Port Information";
                                    font-size: 16px;
                                    font-weight: 600;
                                }
                                for port in ports : HorizontalBox {
                                    Text { text: port.process-id; }
                                    Text { text: port.process-name; }
                                    Text { text: port.protocol; }
                                    Text { text: port.port; }
                                    Text { text: port.direction; }
                                    Text { text: port.network; }
                                }
                            }
                        }
                    }
                }
            }
            
            
            Tab {
                title: "Docker";
                VerticalBox {
                    Text {
                        text: "Docker Networks";
                        font-size: 18px;
                        font-weight: 700;
                    }
                    
                    ScrollView {
                        VerticalBox {
                            for docker in docker-networks: HorizontalBox {
                                Text { text: docker.name; }
                                Text { text: docker.driver; }
                                Text { text: docker.scope; }
                                Text { text: docker.subnet; }
                            }
                        }
                    }
                }
            }
            
            Tab {
                title: "Packet Sender";
                VerticalBox {
                    Text {
                        text: "Packet Sender";
                        font-size: 18px;
                        font-weight: 700;
                    }
                    
                    HorizontalBox {
                        Text { text: "Source Network:"; }
                        // ComboBox {
                        //     model: network-interfaces;
                        //     current-value <=> selected-interface;
                        // }
                    }
                    
                    HorizontalBox {
                        Text { text: "Packet Type:"; }
                        ComboBox {
                            model: ["ping", "HTTP over TCP"];
                            current-value <=> packet-type;
                        }
                    }
                    
                    HorizontalBox {
                        Text { text: "Destination:"; }
                        LineEdit {
                            placeholder-text: "Enter IP address or hostname";
                            text <=> destination;
                        }
                    }
                    
                    Button {
                        text: "Send Packet";
                        clicked => {
                            send-packet();
                        }
                    }
                    
                    TabWidget {
                        Tab {
                            title: "Ping Response";
                            ScrollView {
                                Text {
                                    text: ping-response;
                                    wrap: TextWrap.word-wrap;
                                }
                            }
                        }
                        
                        Tab {
                            title: "HTTP Response";
                            ScrollView {
                                Text {
                                    text: http-response;
                                    wrap: TextWrap.word-wrap;
                                }
                            }
                        }
                        
                        Tab {
                            title: "Raw Output";
                            ScrollView {
                                Text {
                                    text: raw-output;
                                    wrap: TextWrap.word-wrap;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    // Network Detail Popup
    network-detail-popup := PopupWindow {
        width: 600px;
        height: root.height - 40px;
        
        Rectangle {
            background: #2d2d2d;
            border-width: 1px;
            border-color: #555555;
            border-radius: 8px;
            drop-shadow-blur: 10px;
            drop-shadow-color: #00000080;
            
            VerticalBox {
            padding: 16px;
            spacing: 12px;
            
            HorizontalBox {
                Text {
                    text: "Network Interface Details";
                    font-size: 18px;
                    font-weight: 700;
                    horizontal-alignment: left;
                }
                Button {
                    text: "×";
                    width: 30px;
                    height: 30px;
                    clicked => {
                        network-detail-popup.close();
                    }
                }
            }
            
            Rectangle {
                height: 1px;
                background: #cccccc;
            }
            
            ScrollView {
                VerticalBox {
                    spacing: 12px;
                    
                    // Network Information Section
                    VerticalBox {
                        spacing: 8px;
                        
                        Text {
                            text: "Interface Information";
                            font-size: 16px;
                            font-weight: 600;
                        }
                        
                        HorizontalBox {
                            Text { text: "Name:"; width: 120px; font-weight: 500; }
                            Text { 
                                text: selected-network-detail.name;
                                font-family: "monospace";
                            }
                        }
                        
                        HorizontalBox {
                            Text { text: "Environment:"; width: 120px; font-weight: 500; }
                            Text { 
                                text: selected-network-detail.environment;
                                color: selected-network-detail.environment == "Windows" ? #0066cc : (selected-network-detail.environment == "WSL" ? #009900 : #666666);
                                font-weight: 500;
                            }
                        }
                        
                        HorizontalBox {
                            Text { text: "MAC Address:"; width: 120px; font-weight: 500; }
                            Text { 
                                text: selected-network-detail.mac_address == "" ? "N/A" : selected-network-detail.mac_address;
                                font-family: "monospace";
                            }
                        }
                        
                        HorizontalBox {
                            Text { text: "Status:"; width: 120px; font-weight: 500; }
                            Text { 
                                text: selected-network-detail.is_up ? "UP" : "DOWN";
                                color: selected-network-detail.is_up ? #009900 : #cc0000;
                                font-weight: 600;
                            }
                        }
                        
                        HorizontalBox {
                            Text { text: "Type:"; width: 120px; font-weight: 500; }
                            Text { 
                                text: selected-network-detail.is_loopback ? "Loopback" : "Physical/Virtual";
                                font-weight: 500;
                            }
                        }
                    }
                    
                    Rectangle {
                        height: 1px;
                        background: #e0e0e0;
                    }
                    
                    // IP Addresses Section
                    VerticalBox {
                        spacing: 8px;
                        
                        Text {
                            text: "IP Addresses";
                            font-size: 16px;
                            font-weight: 600;
                        }
                        
                        VerticalBox {
                            spacing: 4px;
                            
                            Text {
                                text: "IPv4 Addresses:";
                                font-weight: 500;
                            }
                            
                            for ipv4 in selected-network-detail.ipv4_addresses : Text {
                                text: "  • " + ipv4;
                                font-family: "monospace";
                                font-size: 12px;
                                color: #cccccc;
                            }
                            
                            if selected-network-detail.ipv4_addresses.length == 0 : Text {
                                text: "  No IPv4 addresses";
                                color: #888888;
                            }
                        }
                        
                        VerticalBox {
                            spacing: 4px;
                            
                            Text {
                                text: "IPv6 Addresses:";
                                font-weight: 500;
                            }
                            
                            for ipv6 in selected-network-detail.ipv6_addresses : Text {
                                text: "  • " + ipv6;
                                font-family: "monospace";
                                font-size: 12px;
                                color: #cccccc;
                            }
                            
                            if selected-network-detail.ipv6_addresses.length == 0 : Text {
                                text: "  No IPv6 addresses";
                                color: #888888;
                            }
                        }
                    }
                    
                    Rectangle {
                        height: 1px;
                        background: #e0e0e0;
                    }
                    
                    // Associated Ports Section
                    VerticalBox {
                        spacing: 8px;
                        
                        Text {
                            text: "Associated Open Ports";
                            font-size: 16px;
                            font-weight: 600;
                        }
                        
                        if filtered-ports.length > 0 : VerticalBox {
                            spacing: 4px;
                            
                            // Port headers
                            HorizontalBox {
                                Text { text: "Protocol"; width: 80px; font-weight: 600; font-size: 12px; }
                                Text { text: "Port"; width: 60px; font-weight: 600; font-size: 12px; }
                                Text { text: "State"; width: 80px; font-weight: 600; font-size: 12px; }
                                Text { text: "Process"; width: 120px; font-weight: 600; font-size: 12px; }
                                Text { text: "Address"; width: 150px; font-weight: 600; font-size: 12px; }
                            }
                            
                            Rectangle {
                                height: 1px;
                                background: #e0e0e0;
                            }
                            
                            for port in filtered-ports : HorizontalBox {
                                Text { 
                                    text: port.protocol; 
                                    width: 80px; 
                                    font-family: "monospace";
                                    font-size: 11px;
                                }
                                Text { 
                                    text: port.port; 
                                    width: 60px; 
                                    font-family: "monospace";
                                    font-size: 11px;
                                    font-weight: 600;
                                }
                                Text { 
                                    text: port.direction; 
                                    width: 80px; 
                                    font-family: "monospace";
                                    font-size: 11px;
                                    color: port.direction == "LISTEN" ? #009900 : #666666;
                                }
                                Text { 
                                    text: port.process_name; 
                                    width: 120px; 
                                    font-size: 11px;
                                }
                                Text { 
                                    text: port.network; 
                                    width: 150px; 
                                    font-family: "monospace";
                                    font-size: 11px;
                                }
                            }
                        }
                        
                        if filtered-ports.length == 0 : Text {
                            text: "No open ports found for this interface";
                            color: #888888;
                        }
                    }
                }
            }
        }
    }
}
    
    // Connect callback to show popup
    show-network-popup => {
        network-detail-popup.show();
    }
}
