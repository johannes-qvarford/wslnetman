import { VerticalBox, HorizontalBox, ScrollView, Button, LineEdit } from "std-widgets.slint";
import { NetworkInterface, PortInfo } from "../types.slint";

export component NetworkDetailModal inherits Rectangle {
    in property <NetworkInterface> network-detail;
    in property <[PortInfo]> filtered-ports: [];
    in-out property <bool> show-modal: false;
    in-out property <string> search-text: "";
    
    callback copy-to-clipboard(string);
    callback kill-process(string);
    callback filter-ports(string);
    
    width: 100%;
    height: 100%;
    background: #00000080; // Semi-transparent backdrop
    z: 1000; // Ensure it's on top
    
    // Modal backdrop - catches clicks but doesn't close modal
    TouchArea {
        clicked => {
            // Do nothing - prevent modal from closing on backdrop click
        }
    }
    
    // Centered modal content
    Rectangle {
        width: 650px;
        height: root.height - 80px;
        x: (parent.width - self.width) / 2;
        y: (parent.height - self.height) / 2;
        background: #2d2d2d;
        border-width: 2px;
        border-color: #555555;
        border-radius: 8px;
        drop-shadow-blur: 15px;
        drop-shadow-color: #000000aa;
        
        VerticalBox {
            padding: 20px;
            spacing: 15px;
            
            // Header with close button
            HorizontalBox {
                Text {
                    text: "Network Interface Details";
                    font-size: 18px;
                    font-weight: 700;
                    color: #ffffff;
                    horizontal-alignment: left;
                }
                Button {
                    text: "Ã—";
                    width: 32px;
                    height: 32px;
                    clicked => {
                        show-modal = false;
                    }
                }
            }
            
            Rectangle {
                height: 2px;
                background: #555555;
            }
            
            ScrollView {
                VerticalBox {
                    spacing: 15px;
                    
                    // Network Information Section
                    VerticalBox {
                        spacing: 10px;
                        
                        Text {
                            text: "Interface Information";
                            font-size: 16px;
                            font-weight: 600;
                            color: #ffffff;
                        }
                        
                        HorizontalBox {
                            Text { text: "Name:"; width: 120px; font-weight: 500; color: #cccccc; }
                            Text { 
                                text: network-detail.name;
                                font-family: "monospace";
                                color: #ffffff;
                            }
                        }
                        
                        HorizontalBox {
                            Text { text: "Environment:"; width: 120px; font-weight: 500; color: #cccccc; }
                            Text { 
                                text: network-detail.environment;
                                color: network-detail.environment == "Windows" ? #4da6ff : (network-detail.environment == "WSL" ? #66ff66 : #cccccc);
                                font-weight: 500;
                            }
                        }
                        
                        HorizontalBox {
                            Text { text: "MAC Address:"; width: 120px; font-weight: 500; color: #cccccc; }
                            if network-detail.mac_address != "" : Button {
                                text: network-detail.mac_address;
                                width: 200px;
                                height: 26px;
                                clicked => {
                                    copy-to-clipboard(network-detail.mac_address);
                                }
                            }
                            
                        }
                        
                        HorizontalBox {
                            Text { text: "Status:"; width: 120px; font-weight: 500; color: #cccccc; }
                            Text { 
                                text: network-detail.is_up ? "UP" : "DOWN";
                                color: network-detail.is_up ? #66ff66 : #ff6666;
                                font-weight: 600;
                            }
                        }
                        
                        HorizontalBox {
                            Text { text: "Type:"; width: 120px; font-weight: 500; color: #cccccc; }
                            Text { 
                                text: network-detail.is_loopback ? "Loopback" : "Physical/Virtual";
                                font-weight: 500;
                                color: #ffffff;
                            }
                        }
                    }
                    
                    Rectangle {
                        height: 1px;
                        background: #555555;
                    }
                    
                    // IP Addresses Section
                    VerticalBox {
                        spacing: 10px;
                        
                        Text {
                            text: "IP Addresses";
                            font-size: 16px;
                            font-weight: 600;
                            color: #ffffff;
                        }
                        
                        VerticalBox {
                            spacing: 6px;
                            
                            Text {
                                text: "IPv4 Addresses:";
                                font-weight: 500;
                                color: #cccccc;
                            }
                            
                            for ipv4 in network-detail.ipv4_addresses : HorizontalBox {
                                Button {
                                    text: ipv4;
                                    width: 120px;
                                    height: 26px;
                                    clicked => {
                                        copy-to-clipboard(ipv4);
                                    }
                                }
                            }
                            
                            if network-detail.ipv4_addresses.length == 0 : Text {
                                text: "  No IPv4 addresses";
                                color: #888888;
                            }
                        }
                        
                        VerticalBox {
                            spacing: 6px;
                            
                            Text {
                                text: "IPv6 Addresses:";
                                font-weight: 500;
                                color: #cccccc;
                            }
                            
                            for ipv6 in network-detail.ipv6_addresses : HorizontalBox {
                                Button {
                                    text: ipv6;
                                    width: 200px;
                                    height: 26px;
                                    clicked => {
                                        copy-to-clipboard(ipv6);
                                    }
                                }
                            }
                            
                            if network-detail.ipv6_addresses.length == 0 : Text {
                                text: "  No IPv6 addresses";
                                color: #888888;
                            }
                        }
                    }
                    
                    Rectangle {
                        height: 1px;
                        background: #555555;
                    }
                    
                    // Associated Ports Section
                    VerticalBox {
                        spacing: 10px;
                        
                        Text {
                            text: "Associated Open Ports";
                            font-size: 16px;
                            font-weight: 600;
                            color: #ffffff;
                        }

                        // Search input for filtering ports
                        HorizontalBox {
                            spacing: 8px;
                            Text { text: "Search:"; width: 60px; color: #cccccc; }
                            LineEdit {
                                placeholder-text: "Process, port, or PID";
                                width: 300px;
                                text <=> search-text;
                                edited => { filter-ports(search-text); }
                                accepted => { filter-ports(search-text); }
                            }
                        }
                        
                        if filtered-ports.length > 0 : VerticalBox {
                            spacing: 6px;
                            
                            // Port headers
                            HorizontalBox {
                                Text { text: "Protocol"; width: 60px; font-weight: 600; font-size: 12px; color: #cccccc; }
                                Text { text: "Port"; width: 60px; font-weight: 600; font-size: 12px; color: #cccccc; }
                                Text { text: "State"; width: 60px; font-weight: 600; font-size: 12px; color: #cccccc; }
                                Text { text: "Process"; width: 90px; font-weight: 600; font-size: 12px; color: #cccccc; }
                                Text { text: "PID"; width: 50px; font-weight: 600; font-size: 12px; color: #cccccc; }
                                Text { text: "Address"; width: 90px; font-weight: 600; font-size: 12px; color: #cccccc; }
                                Text { text: "Action"; width: 60px; font-weight: 600; font-size: 12px; color: #cccccc; }
                            }
                            
                            Rectangle {
                                height: 1px;
                                background: #555555;
                            }
                            
                            for port in filtered-ports : HorizontalBox {
                                Text { 
                                    text: port.protocol; 
                                    width: 60px; 
                                    font-family: "monospace";
                                    font-size: 11px;
                                    color: #ffffff;
                                }
                                Button {
                                    text: port.port;
                                    width: 60px;
                                    height: 26px;
                                    clicked => {
                                        copy-to-clipboard(port.port);
                                    }
                                }
                                Text { 
                                    text: port.direction; 
                                    width: 60px; 
                                    font-family: "monospace";
                                    font-size: 11px;
                                    color: port.direction == "LISTEN" ? #66ff66 : #cccccc;
                                }
                                Text { 
                                    text: port.process_name; 
                                    width: 90px; 
                                    font-size: 11px;
                                    color: #ffffff;
                                }
                                Text { 
                                    text: port.process_id; 
                                    width: 50px; 
                                    font-family: "monospace";
                                    font-size: 11px;
                                    color: #ffcc66;
                                }
                                Button {
                                    text: port.network;
                                    width: 90px;
                                    height: 26px;
                                    clicked => {
                                        copy-to-clipboard(port.network);
                                    }
                                }
                                if port.process_id != "N/A" && port.process_id != "0" && port.process_id != "1" && port.process_id != "4" : Button {
                                    text: "Kill";
                                    width: 50px;
                                    height: 26px;
                                    clicked => {
                                        kill-process(port.process_id);
                                    }
                                }
                                if port.process_id == "N/A" || port.process_id == "0" || port.process_id == "1" || port.process_id == "4" : Text {
                                    text: "-";
                                    width: 50px;
                                    font-size: 11px;
                                    color: #888888;
                                    horizontal-alignment: center;
                                }
                            }
                        }
                        
                        if filtered-ports.length == 0 : Text {
                            text: "No open ports found for this interface";
                            color: #888888;
                        }
                    }
                }
            }
        }
    }
}