import { VerticalBox, HorizontalBox, ScrollView } from "std-widgets.slint";
import { NetworkInterface, PortInfo } from "../types.slint";
import { TableHeader, TableSeparator, TableRowSeparator, TableRow, EnvironmentCell, StatusCell, AddressCell, MacAddressCell, TableCell } from "../styles/table.slint";

export component NetworkTab inherits VerticalBox {
    in property <[NetworkInterface]> network-interfaces: [];
    in property <[PortInfo]> ports: [];
    
    callback network-row-clicked(int);
    
    Text {
        text: "Networks";
        font-size: 18px;
        font-weight: 700;
    }
    
    HorizontalBox {
        ScrollView {
            width: 100%;
            VerticalBox {
                // Header row
                TableHeader {
                    columns: [
                        {text: "Environment", width: 120px},
                        {text: "Interface", width: 140px},
                        {text: "MAC Address", width: 140px},
                        {text: "IPv4 Addresses", width: 160px},
                        {text: "IPv6 Addresses", width: 200px},
                        {text: "Status", width: 80px}
                    ];
                }
                
                // Separator
                TableSeparator {}
                
                // Network interfaces data
                for network[index] in network-interfaces : VerticalBox {
                    table-row := TableRow {
                        row-clicked => {
                            network-row-clicked(index);
                        }
                        
                        HorizontalBox {
                            padding: 8px;
                            EnvironmentCell {
                                text: network.environment;
                                cell-width: 120px;
                                is-hover: table-row.has-hover;
                                environment: network.environment;
                            }
                            TableCell {
                                text: network.name;
                                cell-width: 140px;
                                is-hover: table-row.has-hover;
                                font-weight: network.is_loopback ? 400 : 500;
                            }
                            MacAddressCell {
                                text: network.mac_address == "" ? "N/A" : network.mac_address;
                                cell-width: 140px;
                                is-hover: table-row.has-hover;
                            }
                            AddressCell {
                                text: {
                                    // Join IPv4 addresses with commas
                                    network.ipv4_addresses.length > 0 ? (
                                        network.ipv4_addresses.length > 1 ? 
                                            network.ipv4_addresses[0] + ", " + (network.ipv4_addresses.length > 2 ? network.ipv4_addresses[1] + ", ..." : network.ipv4_addresses[1])
                                            : network.ipv4_addresses[0]
                                    ) : "N/A"
                                };
                                cell-width: 160px;
                                is-hover: table-row.has-hover;
                            }
                            AddressCell {
                                text: {
                                    // Join IPv6 addresses with commas
                                    network.ipv6_addresses.length > 0 ? (
                                        network.ipv6_addresses.length > 1 ? 
                                            network.ipv6_addresses[0] + ", " + (network.ipv6_addresses.length > 2 ? network.ipv6_addresses[1] + ", ..." : network.ipv6_addresses[1])
                                            : network.ipv6_addresses[0]
                                    ) : "N/A"
                                };
                                cell-width: 200px;
                                is-hover: table-row.has-hover;
                            }
                            StatusCell {
                                text: network.is_up ? "UP" : "DOWN";
                                cell-width: 80px;
                                is-hover: table-row.has-hover;
                                is-up: network.is_up;
                            }
                        }
                    }
                    // Grid line separator
                    TableRowSeparator {}
                }
            }
        }
        
        ScrollView {
            width: 700px;
            VerticalBox {
                Text {
                    text: "Port Information";
                    font-size: 16px;
                    font-weight: 600;
                }
                for port in ports : HorizontalBox {
                    Text { text: port.process-id; }
                    Text { text: port.process-name; }
                    Text { text: port.protocol; }
                    Text { text: port.port; }
                    Text { text: port.direction; }
                    Text { text: port.network; }
                }
            }
        }
    }
}